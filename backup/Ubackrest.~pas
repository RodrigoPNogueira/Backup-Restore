unit Ubackrest;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, StdCtrls, FileCtrl, Buttons, ExtCtrls, IBServices;

type
  TForm1 = class(TForm)
    RadioGroup1: TRadioGroup;
    GroupBox1: TGroupBox;
    GroupBox2: TGroupBox;
    Label1: TLabel;
    Edit1: TEdit;
    SpeedButton1: TSpeedButton;
    DirectoryListBox1: TDirectoryListBox;
    Label2: TLabel;
    Edit2: TEdit;
    Label3: TLabel;
    SpeedButton2: TSpeedButton;
    Edit3: TEdit;
    Label4: TLabel;
    DriveComboBox1: TDriveComboBox;
    Label5: TLabel;
    Button1: TButton;
    Label6: TLabel;
    Memo1: TMemo;
    OpenDialog1: TOpenDialog;
    IBBackupService1: TIBBackupService;
    cb_IgnoreChecksums: TCheckBox;
    cb_IgnoreLimbo: TCheckBox;
    cb_NoGarbageCollection: TCheckBox;
    cb_NonTransportable: TCheckBox;
    Button2: TButton;
    OpenDialog2: TOpenDialog;
    Label7: TLabel;
    Edit4: TEdit;
    SpeedButton3: TSpeedButton;
    IBRestoreService1: TIBRestoreService;
    cb_Replace: TCheckBox;
    cb_NoValidityCheck: TCheckBox;
    procedure SpeedButton1Click(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Button1Click(Sender: TObject);
    procedure SpeedButton2Click(Sender: TObject);
    procedure SpeedButton3Click(Sender: TObject);
    procedure Button2Click(Sender: TObject);
    procedure RadioGroup1Click(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form1: TForm1;

implementation

{$R *.dfm}

procedure TForm1.SpeedButton1Click(Sender: TObject);
begin
  OpenDialog1.InitialDir := ExtractFilePath(Application.ExeName);
  if OpenDialog1.Execute then
     edit1.Text := OpenDialog1.FileName;
end;

procedure TForm1.FormCreate(Sender: TObject);
begin
      DirectoryListBox1.Directory := ExtractFilePath(Application.ExeName);
      //backup040108.bak
      edit3.Text :='backup'+formatdatetime('ddmmyy', date)+'.bak';

end;

procedure TForm1.Button1Click(Sender: TObject);
begin
   if edit1.Text = '' then
   begin
       Application.MessageBox('Atenção, arquivo para efetuar backup não informado','Atenção.:',MB_APPLMODAL + MB_OK + MB_ICONWARNING);
       Exit;
   end;
   if edit3.Text = '' then
   begin
       Application.MessageBox('Atenção, nome do arquivo não foi informado','Atenção.:',MB_APPLMODAL + MB_OK + MB_ICONWARNING);
       Exit;
   end;


   try
     Screen.Cursor := crHourGlass;
     with IBBackupService1 do
     begin
         ServerName := 'Local Server';
         LoginPrompt := false;
         Params.Add('user_name=SYSDBA');
         Params.add('password=masterkey');
         Active := true;
         Verbose := true;
         DatabaseName := edit1.Text;
         BackupFile.Add(DirectoryListBox1.Directory+'\'+edit3.Text);
         Options := [];
         if cb_IgnoreChecksums.Checked then
            Options := Options + [IgnoreChecksums];
         if cb_IgnoreLimbo.Checked then
            Options := Options + [IgnoreLimbo];
         if cb_NoGarbageCollection.Checked then
            Options := Options + [NoGarbageCollection];
         if cb_NonTransportable.Checked then
            Options := Options + [NonTransportable];
         ServiceStart;
         while not eof do
            Memo1.Lines.Add(GetNextLine);

      end;
    finally
         showMessage('backup efetuado com sucesso');
         Screen.Cursor := crDefault;
    end;
    Application.ProcessMessages;




end;

procedure TForm1.SpeedButton2Click(Sender: TObject);
begin
  OpenDialog2.InitialDir := ExtractFilePath(Application.ExeName);
  if OpenDialog2.Execute then
     edit2.Text := OpenDialog2.FileName;
end;

procedure TForm1.SpeedButton3Click(Sender: TObject);
begin
  OpenDialog2.InitialDir := ExtractFilePath(Application.ExeName);
  if OpenDialog2.Execute then
     edit4.Text := OpenDialog2.FileName;
end;

procedure TForm1.Button2Click(Sender: TObject);
begin
   if edit2.Text = '' then
   begin
       Application.MessageBox('Atenção, arquivo a ser restaurado não informado','Atenção.:',MB_APPLMODAL + MB_OK + MB_ICONWARNING);
       Exit;
   end;
   if edit4.Text = '' then
   begin
       Application.MessageBox('Atenção, local não foi informado','Atenção.:',MB_APPLMODAL + MB_OK + MB_ICONWARNING);
       Exit;
   end;

   try
        Screen.Cursor := crHourGlass;
        if Application.MessageBox('Tem certeza?','Confirmar', mb_applmodal+mb_iconquestion+mb_yesno) = mryes then
        begin
          with IBRestoreService1 do
          begin
             ServerName := 'Local Server';
             LoginPrompt := false;
             Params.Add('user_name=SYSDBA');
             Params.add('password=masterkey');
           Active := true;
           Verbose := true;
           DatabaseName.add(edit4.Text);
           BackupFile.Add(edit2.Text);
           Options := [];
           if cb_Replace.Checked then
              Options := Options + [Replace];
           if cb_NoValidityCheck.Checked then
              Options := Options + [NoValidityCheck];
           PageSize := 2048;


           ServiceStart;
           while not eof do
              Memo1.Lines.Add(GetNextLine);


          end;
        end;

   finally
        Screen.Cursor := crDefault;
   end;
   Application.ProcessMessages;

end;

procedure TForm1.RadioGroup1Click(Sender: TObject);
begin
    case RadioGroup1.ItemIndex of
       0:
         begin
              GroupBox1.Visible:=true;
              GroupBox2.Visible:=false;
         end;
       1:
       begin
            GroupBox1.Visible:=false;
            GroupBox2.Visible:=true;
       end;
     end;


end;

end.
